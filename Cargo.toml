[workspace]
members = ["crates/*", "crates/**/examples/*"]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2024"
rust-version = "1.85"
authors = ["Nectar Contributors"]
license = "MIT"
homepage = "https://nullisxyz.github.io/nectar"
repository = "https://nullisxyz.github.io/nectar"
exclude = ["benches/", "tests/"]

[workspace.lints.rust]
missing-debug-implementations = "warn"
missing-docs = "warn"
unreachable-pub = "warn"
unused-must-use = "deny"
rust-2018-idioms = "deny"

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
missing-const-for-fn = "warn"
use-self = "warn"
option-if-let-else = "warn"
redundant-clone = "warn"

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[workspace.metadata.rust-analyzer]
check.all_targets = true

[workspace.dependencies]
# nectar crates
nectar-primitives = { path = "crates/primitives" }

# crypt & hashing
alloy-primitives = { version = "0.8.25" }
alloy-signer = { version = "0.12.6", default-features = false }
alloy-signer-local = { version = "0.12.6", default-features = false }

digest = "0.10"
generic-array = "0.14"

# sync
parking_lot = "0.12"

# concurrency and parallelism
rayon = "1.10"

# Core dependencies
bytes = { version = "1.10", default-features = false }
thiserror = { version = "2.0", default-features = false }
once_cell = { version = "1.21", default-features = false, features = ["critical-section"] }

# For tests and examples
arbitrary = "1.4"
criterion = { package = "codspeed-criterion-compat", version = "2.9.1" }
proptest = "1"
proptest-arbitrary-interop = "0.1"
proptest-derive = "0.5"
rand = "0.9"

# wasm
wasm-bindgen = "0.2"
js-sys = "0.3"
getrandom = { version = "0.2", features = ["js"] }
